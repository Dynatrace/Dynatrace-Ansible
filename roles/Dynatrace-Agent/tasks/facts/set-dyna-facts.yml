---
# BACKLOG: Consider using blocks
- name: "Check if dynatrace is already installed"
  find:
    paths: "{{ dynatrace_agent_linux_root_dir }}"
    recurse: no
    patterns: '(dynatrace)'
    use_regex: yes
    file_type: link
  register: dynatrace_agent_installed_version_dir

- name: "set dynatrace is installed fact"
  set_fact:
    dynatrace_agent_installed_version_path: "{{ dynatrace_agent_installed_version_dir.files[0].path }}"
  when: dynatrace_agent_installed_version_dir.matched == 1

- name: "set dynatrace is not installed fact"
  set_fact:
    dynatrace_agent_not_installed: "True"
  when: dynatrace_agent_installed_version_dir.matched == 0

- name: Check for jar extract-install dir
  find:
    paths: "{{ dynatrace_agent_linux_root_dir }}"
    recurse: no
    patterns: '(dynatrace)[\d-][7](.)[0]'
    use_regex: yes
    file_type: directory
  register: dynatrace_agent_extract_install_dir

- name: "set incomplete install fact"
  set_fact:
    dynatrace_incomplete_install_path: "{{ dynatrace_agent_extract_install_dir.files[0].path }}"
  when:
    - dynatrace_agent_installed_version_dir.matched == 0
    - dynatrace_agent_extract_install_dir.matched != 0

- name: Check if the Dynatrace installer is provided locally if it is not already installed
  local_action:
    module: stat
    path: "{{ playbook_dir }}/roles/{{ dynatrace_agent_role_name }}/files/linux/{{ dynatrace_agent_linux_installer_file_name }}"
  register: dynatrace_agent_installer_file_provided
  when: (dynatrace_agent_installed_version_dir.matched == 0 and dynatrace_agent_extract_install_dir.matched == 0)

- name: "Check if we previously downladed {{ dynatrace_agent_linux_installer_file_name }} installer if not provided or already installed"
  stat:
    path: "{{ dynatrace_agent_linux_root_dir }}/{{ dynatrace_agent_linux_installer_file_name }}"
  register: dynatrace_agent_installer_downloaded
  when:
    - dynatrace_agent_installer_file_provided.stat.exists == false
    - (dynatrace_agent_installed_version_dir.matched == 0 and dynatrace_agent_extract_install_dir.matched == 0)
